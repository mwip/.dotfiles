diff --git a/config.def.h b/config.def.h
index 1c0b587..98e42a1 100644
--- a/config.def.h
+++ b/config.def.h
@@ -5,21 +5,22 @@ static const unsigned int borderpx  = 1;        /* border pixel of windows */
 static const unsigned int snap      = 32;       /* snap pixel */
 static const int showbar            = 1;        /* 0 means no bar */
 static const int topbar             = 1;        /* 0 means bottom bar */
-static const char *fonts[]          = { "monospace:size=10" };
-static const char dmenufont[]       = "monospace:size=10";
+static const char *fonts[]          = { "Ubuntu Mono Nerd Font:size=11" };
+static const char dmenufont[]       = "Ubuntu Mono Nerd Font:size=11";
 static const char col_gray1[]       = "#222222";
 static const char col_gray2[]       = "#444444";
 static const char col_gray3[]       = "#bbbbbb";
 static const char col_gray4[]       = "#eeeeee";
 static const char col_cyan[]        = "#005577";
+static const char col_red[]         = "#ff0000";
 static const char *colors[][3]      = {
 	/*               fg         bg         border   */
 	[SchemeNorm] = { col_gray3, col_gray1, col_gray2 },
-	[SchemeSel]  = { col_gray4, col_cyan,  col_cyan  },
+	[SchemeSel]  = { col_gray4, col_cyan,  col_red  },
 };
 
 /* tagging */
-static const char *tags[] = { "1", "2", "3", "4", "5", "6", "7", "8", "9" };
+static const char *tags[] = { "1:", "2:", "3:", "4:", "5:", "6:ﱘ", "7:", "8:", "9:" };
 
 static const Rule rules[] = {
 	/* xprop(1):
@@ -27,12 +28,13 @@ static const Rule rules[] = {
 	 *	WM_NAME(STRING) = title
 	 */
 	/* class      instance    title       tags mask     isfloating   monitor */
-	{ "Gimp",     NULL,       NULL,       0,            1,           -1 },
-	{ "Firefox",  NULL,       NULL,       1 << 8,       0,           -1 },
+	{ "Gimp",     NULL,       NULL,       0,            0,           -1 },
+	{ "Firefox",  NULL,       NULL,       0,            0,           -1 },
+	{ "KeePassXC",NULL,       NULL,       0,            0,           -1 },
 };
 
 /* layout(s) */
-static const float mfact     = 0.55; /* factor of master area size [0.05..0.95] */
+static const float mfact     = 0.5; /* factor of master area size [0.05..0.95] */
 static const int nmaster     = 1;    /* number of clients in master area */
 static const int resizehints = 1;    /* 1 means respect size hints in tiled resizals */
 
@@ -44,7 +46,12 @@ static const Layout layouts[] = {
 };
 
 /* key definitions */
-#define MODKEY Mod1Mask
+#define MODKEY Mod4Mask
+#define XF86AudioMute 0x1008ff12
+#define XF86AudioLowerVolume 0x1008ff11
+#define XF86AudioRaiseVolume 0x1008ff13
+#define XF86MonBrightnessDown 0x1008ff03
+#define XF86MonBrightnessUp 0x1008ff02
 #define TAGKEYS(KEY,TAG) \
 	{ MODKEY,                       KEY,      view,           {.ui = 1 << TAG} }, \
 	{ MODKEY|ControlMask,           KEY,      toggleview,     {.ui = 1 << TAG} }, \
@@ -56,13 +63,28 @@ static const Layout layouts[] = {
 
 /* commands */
 static char dmenumon[2] = "0"; /* component of dmenucmd, manipulated in spawn() */
-static const char *dmenucmd[] = { "dmenu_run", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
-static const char *termcmd[]  = { "st", NULL };
+static const char *dmenucmd[] = { "/home/loki/.scripts/dmenu_recent.sh", "-m", dmenumon, "-fn", dmenufont, "-nb", col_gray1, "-nf", col_gray3, "-sb", col_cyan, "-sf", col_gray4, NULL };
+static const char *termcmd[]  = { "urxvtc", NULL };
+static const char *browsercmd[] = { "firefox", NULL };
+static const char *brightness_up[]  =   { "/home/loki/.scripts/brightness.sh", "+", NULL };
+static const char *brightness_down[]  = { "/home/loki/.scripts/brightness.sh", "-", NULL };
+static const char *volume_up[]  = { "/home/loki/.scripts/adjust_volume.sh", "+", NULL };
+static const char *volume_down[]  = { "/home/loki/.scripts/adjust_volume.sh", "-", NULL };
+static const char *volume_mute[] = { "/home/loki/.scripts/adjust_volume.sh", "m", NULL };
+static const char *ref_bar[] = {"/home/loki/.scripts/dwm_ref_bar.sh", NULL };
+static const char *file_menu[] = {"/home/loki/.scripts/dmenu_filemanager.sh", NULL };
+static const char *display_select[] = {"/home/loki/.scripts/dmenu_displayselect.sh", NULL };
+static const char *exit_menu[] = {"/home/loki/.scripts/dmenu_exit.sh", NULL };
+static const char *emacscmd[] = {"emacs", NULL};
 
 static Key keys[] = {
 	/* modifier                     key        function        argument */
-	{ MODKEY,                       XK_p,      spawn,          {.v = dmenucmd } },
-	{ MODKEY|ShiftMask,             XK_Return, spawn,          {.v = termcmd } },
+	{ MODKEY,                       XK_r,      spawn,          {.v = dmenucmd } },
+	{ ControlMask|Mod1Mask,         XK_e,      spawn,          {.v = emacscmd } },
+	{ MODKEY,                       XK_Return, spawn,          {.v = termcmd } },
+	{ MODKEY|ControlMask,           XK_Return, spawn,          {.v = browsercmd } },
+	{ MODKEY,                       XK_e,      spawn,          {.v = file_menu } },
+	{ MODKEY,                       XK_p,      spawn,          {.v = display_select } },
 	{ MODKEY,                       XK_b,      togglebar,      {0} },
 	{ MODKEY,                       XK_j,      focusstack,     {.i = +1 } },
 	{ MODKEY,                       XK_k,      focusstack,     {.i = -1 } },
@@ -70,9 +92,9 @@ static Key keys[] = {
 	{ MODKEY,                       XK_d,      incnmaster,     {.i = -1 } },
 	{ MODKEY,                       XK_h,      setmfact,       {.f = -0.05} },
 	{ MODKEY,                       XK_l,      setmfact,       {.f = +0.05} },
-	{ MODKEY,                       XK_Return, zoom,           {0} },
+	{ MODKEY|ShiftMask,             XK_Return, zoom,           {0} },
 	{ MODKEY,                       XK_Tab,    view,           {0} },
-	{ MODKEY|ShiftMask,             XK_c,      killclient,     {0} },
+	{ MODKEY,                       XK_q,      killclient,     {0} },
 	{ MODKEY,                       XK_t,      setlayout,      {.v = &layouts[0]} },
 	{ MODKEY,                       XK_f,      setlayout,      {.v = &layouts[1]} },
 	{ MODKEY,                       XK_m,      setlayout,      {.v = &layouts[2]} },
@@ -93,7 +115,18 @@ static Key keys[] = {
 	TAGKEYS(                        XK_7,                      6)
 	TAGKEYS(                        XK_8,                      7)
 	TAGKEYS(                        XK_9,                      8)
-	{ MODKEY|ShiftMask,             XK_q,      quit,           {0} },
+	{ MODKEY|ShiftMask,             XK_q,      spawn,          {.v = exit_menu } },
+	{ MODKEY|ShiftMask|ControlMask, XK_q,      quit,           {0} },
+	{ 0,                            XF86MonBrightnessUp, spawn, {.v = brightness_up } },
+	{ 0,                            XF86MonBrightnessUp, spawn, {.v = ref_bar } },
+	{ 0,                            XF86MonBrightnessDown, spawn, {.v = brightness_down } },
+	{ 0,                            XF86MonBrightnessDown, spawn, {.v = ref_bar } },
+	{ 0,                            XF86AudioMute, spawn, {.v = volume_mute } },
+	{ 0,                            XF86AudioMute, spawn, {.v = ref_bar } },
+	{ 0,                            XF86AudioRaiseVolume, spawn, {.v = volume_up } },
+	{ 0,                            XF86AudioRaiseVolume, spawn, {.v = ref_bar } },
+	{ 0,                            XF86AudioLowerVolume, spawn, {.v = volume_down } },
+	{ 0,                            XF86AudioLowerVolume, spawn, {.v = ref_bar } },
 };
 
 /* button definitions */
